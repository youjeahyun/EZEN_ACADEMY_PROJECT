<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.mapper.CartMapper">

<!-- 장바구니 담기 -->
  <insert id="addCart" >
  insert into shop_cart(memberId, bookId, uuid,cartStock, cartid)
   values (#{memberId},#{bookId},#{uuid},#{cartStock},#{cartid})
  
  </insert>

 <select id="cartList"  resultType="com.shop.model.CartListVO">
 
 select  c.cartId, c.uuid,c.memberId,c.bookId,c.cartStock,b.bookName,b.bookPrice  from shop_cart c inner join shop_book b on c.bookId= b.bookId 
     where c.memberId=#{memberId} order by c.bookId desc limit #{cri.skip}, #{cri.amount}
 
 
 </select>


<!-- 카트 삭제 -->
<delete id="deleteCart">
 delete from shop_cart
     where cartid = #{cartid}
         and memberId = #{memberId}
</delete>

<!-- 주문정보 -->
<insert id="orderInfo">
insert into shop_order values(#{orderId},#{memberId},#{orderRec},#{userAddr1},#{userAddr2},#{userAddr3},#{orderPhon},#{amount},#{orderDate})



</insert>

<!-- 카트비우기 -->
<delete id="cartAllDelete">
 delete from shop_cart
   where memberId=#{memberId}

</delete>



<select id="cartGetTotal" resultType="int">
 
 	 select count(*) from shop_cart where memberId=#{memberId};
 
 </select>

 <select id="cartGetTotal2" resultType="com.shop.model.CartListVO">
 
 	 select * from shop_cart order by cartId desc Limit 1;
 
 </select>

<!-- 주문 상세 정보 -->
<insert id ="orderInfo_Details">
insert into shop_order_details(orderId, bookId, cartStock)
select #{orderId}, bookId, cartStock
from shop_cart where memberId= #{memberId};

</insert>

<!-- 특정 유저의 주문 목록 -->
<select id="orderList" resultType="com.shop.model.OrderVO">
select * from shop_order where memberId = #{memberId}
</select>


<!-- 특정 주문 목록 -->
<select id="orderView" resultType="com.shop.model.OrderListVO">
select o.orderId, o.memberId, o.orderRec, o.userAddr1, o.userAddr2, o.userAddr3, o.orderPhon, o.amount, o.orderDate,
d.bookId, d.cartStock,
i.fileName, i.uuid, i.uploadPath,
g.bookName,g.bookPrice
from shop_order o
inner join shop_order_details d
on o.orderId = d.orderId
inner join shop_book g
on d.bookId = g.bookId
inner join shop_image i
on i.bookId = g.bookId
where o.memberId = #{memberId}
and o.orderId = #{orderId}
</select>

<!-- 수량수정 -->
   <update id="stockUpdate">
      update shop_book a inner join shop_cart b on a.bookId=b.bookId
      set a.bookStock = a.bookStock-b.cartStock
      where b.memberId =#{memberId};
   </update>
</mapper>
